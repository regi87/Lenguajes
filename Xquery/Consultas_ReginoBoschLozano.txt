Consultas Ejercicio 1 Regino Bosch Lozano

Consulta 1:

doc("Practica1ReginoBoschLozanoXquery.xml")//Colegio/Alumnos/Alumno[Poblacion="Catarroja"]


Consulta 2:

doc("Practica1ReginoBoschLozanoXquery.xml")//Colegio/Alumnos/Alumno[Tutor="Pepe" or Tutor="Juan"]


Consulta 3:

doc("Practica1ReginoBoschLozanoXquery.xml")//Colegio/Alumnos/Alumno[NotaMedia<8]


Consulta 4:

for $alumno in doc("Practica1ReginoBoschLozanoXquery.xml")//Colegio/Alumnos/Alumno
for $tutor in doc("Practica1ReginoBoschLozanoXquery.xml")//Colegio/Tutores/Tutor
let $nombreAlumno:=$alumno
let $nombreTutor:=$tutor
where $tutor/NomTutor=$alumno/Tutor and $tutor/Ciudad = "Torrente"
return $nombreAlumno

Consulta 5:

declare namespace functx = "http://www.functx.com";
declare function functx:mmddyyyy-to-date
  ( $dateString as xs:string? )  as xs:date? {

   if (empty($dateString))
   then ()
   else if (not(matches($dateString,
                        '^\D*(\d{2})\D*(\d{2})\D*(\d{4})\D*$')))
   then error(xs:QName('functx:Invalid_Date_Format'))
   else xs:date(replace($dateString,
                        '^\D*(\d{2})\D*(\d{2})\D*(\d{4})\D*$',
                        '$3-$1-$2'))
 } ;
 doc("Practica1ReginoBoschLozanoXquery.xml")//Colegio/Alumnos/Alumno[functx:mmddyyyy-to-date(FechaNac)>xs:date("2013-01-01") and functx:mmddyyyy-to-date(FechaNac)<xs:date("2014-01-01") ]





